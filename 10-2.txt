<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
    <script src="https://npmcdn.com/react@15.3.0/dist/react.js"></script>
    <script src="https://npmcdn.com/react-dom@15.3.0/dist/react-dom.js"></script>
    <script src="https://unpkg.com/babel-standalone@6.15.0/babel.min.js"></script>
    <script src="https://npmcdn.com/jquery@3.1.0/dist/jquery.min.js"></script>
    <script src="https://npmcdn.com/remarkable@1.6.2/dist/remarkable.min.js"></script>
</head>

<body>

    <h2>
        Задачи на продвинутую работу с компонентами в React
    </h2>

  
<h2>Практика</h2>


<h3>Задание 7. Пусть в стейте хранится массив с продуктами. У каждого продукта 
    есть название, цена и количество. Выведите все продукты на экран в виде таблицы.
    Сделайте так, чтобы в таблице была колонка, в которой выводится полная стоимость 
    продукта (цена умножить на количество).

    Пусть отображением продукта на экран занимается отдельный компонент. Сделайте так,
     чтобы рядом с каждым продуктом была кнопка 'удалить', с помощью которой можно 
     удалить этот продукт из таблицы.

</h3>

<div id="content7"></div>

<script type="text/babel">

    class Table extends React.Component {

    constructor() {

    super();

    }

    render() {
        return (
            <tr>
                <td>{this.props.name}</td>
                <td>{this.props.price}</td>
                <td>{this.props.count}</td>
                <td>{this.props.count * this.props.price}</td>
                <td><a onClick={this.props.deleteUser.bind(null, this.props.index)}>+++++</a> </td>
            </tr>
        );
    }
    
};


    class App extends React.Component {

    constructor() {

        super();

        this.state = {
            users: [
                {name:'ddddd', price:50, count:10},
                {name:'aaaaaa', price:60, count:11},
                {name:'ffffff', price:70, count:12},
                {name:'hhhhhh', price:80, count:13}

            ]
        };

    }

    deleteUser(argNum) {

        this.state.users.splice(argNum, 1);  

        this.setState({users:this.state.users});

    }


    render() {

        const list = this.state.users.map((elem,i) => 

        <Table 
                    key={i} 
                    name={elem.name} 
                    price={elem.price} 
                    count={elem.count}
                    index={i}
                    deleteUser={this.deleteUser.bind(this)}
                />  

        );

        return (
            
            <div>
                <table><tbody>{list}</tbody></table>
            </div>

        );
    }
}

ReactDOM.render(
    <App />, document.getElementById('content7')
);


</script>
<hr>


<h3>Задание 8. Модифицируйте предыдущую задачу так, чтобы появился еще и один 
    отдельный компонент для добавления нового продукта в таблицу.
    
    </h3>
    
    <div id="content8"></div>
    
    <script type="text/babel">
    
        class Table extends React.Component {
    
        constructor() {
    
        super();
    
        }
    
        render() {
            return (
                <tr>
                    <td>{this.props.name}</td>
                    <td>{this.props.price}</td>
                    <td>{this.props.count}</td>
                    <td>{this.props.count * this.props.price}</td>
                    <td><a onClick={this.props.deleteUser.bind(null, this.props.index)}>+++++</a> </td>
                </tr>
            );
        }
        
    };
    
    
        class App extends React.Component {
    
        constructor() {
    
            super();
    
            this.state = {
                users: [
                    {name:'ddddd', price:50, count:10},
                    {name:'aaaaaa', price:60, count:11},
                    {name:'ffffff', price:70, count:12},
                    {name:'hhhhhh', price:80, count:13}
    
                ]
            };
    
        }
    
        deleteUser(argNum) {
    
            this.state.users.splice(argNum, 1);  
    
            this.setState({users:this.state.users});
    
        }
    
    
        render() {
    
            const list = this.state.users.map((elem,i) => 
    
            <Table 
                        key={i} 
                        name={elem.name} 
                        price={elem.price} 
                        count={elem.count}
                        index={i}
                        deleteUser={this.deleteUser.bind(this)}
                    />  
    
            );
    
            return (
                
                <div>
                    <table><tbody>{list}</tbody></table>
                </div>
    
            );
        }
    }
    
    ReactDOM.render(
        <App />, document.getElementById('content8')
    );
    
    
    </script>
    <hr>

    <br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
</body>

</html>